
temp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003ba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  000003ba  0000044e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800072  00800072  00000460  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000460  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000069  00000000  00000000  00000480  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000001e4  00000000  00000000  000004e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000011d  00000000  00000000  000006cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001c3  00000000  00000000  000007ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000040  00000000  00000000  000009b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000eb  00000000  00000000  000009f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000028  00000000  00000000  00000adb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00000b03  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea eb       	ldi	r30, 0xBA	; 186
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a2 37       	cpi	r26, 0x72	; 114
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a2 e7       	ldi	r26, 0x72	; 114
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 37       	cpi	r26, 0x76	; 118
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 71 00 	call	0xe2	; 0xe2 <main>
  8a:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_11>:


//przerwania wyzwalane sa przy przepelnieniu

ISR(TIMER0_OVF_vect) //przerwanie 1
{
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	8f 93       	push	r24
	if(i++== 1) {
  9e:	80 91 72 00 	lds	r24, 0x0072
  a2:	8f 5f       	subi	r24, 0xFF	; 255
  a4:	80 93 72 00 	sts	0x0072, r24
  a8:	81 50       	subi	r24, 0x01	; 1
  aa:	81 30       	cpi	r24, 0x01	; 1
  ac:	11 f4       	brne	.+4      	; 0xb2 <__vector_11+0x20>
		i = 0;
  ae:	10 92 72 00 	sts	0x0072, r1
	}
}
  b2:	8f 91       	pop	r24
  b4:	0f 90       	pop	r0
  b6:	0f be       	out	0x3f, r0	; 63
  b8:	0f 90       	pop	r0
  ba:	1f 90       	pop	r1
  bc:	18 95       	reti

000000be <__vector_9>:

ISR(TIMER1_OVF_vect)  // przerwanie 2
{
  be:	1f 92       	push	r1
  c0:	0f 92       	push	r0
  c2:	0f b6       	in	r0, 0x3f	; 63
  c4:	0f 92       	push	r0
  c6:	11 24       	eor	r1, r1
  c8:	8f 93       	push	r24
  ca:	9f 93       	push	r25
	TCNT1 = 1000;		
  cc:	88 ee       	ldi	r24, 0xE8	; 232
  ce:	93 e0       	ldi	r25, 0x03	; 3
  d0:	9d bd       	out	0x2d, r25	; 45
  d2:	8c bd       	out	0x2c, r24	; 44
}
  d4:	9f 91       	pop	r25
  d6:	8f 91       	pop	r24
  d8:	0f 90       	pop	r0
  da:	0f be       	out	0x3f, r0	; 63
  dc:	0f 90       	pop	r0
  de:	1f 90       	pop	r1
  e0:	18 95       	reti

000000e2 <main>:

int main(void)
{
  e2:	0f 93       	push	r16
  e4:	1f 93       	push	r17
  e6:	cf 93       	push	r28
  e8:	df 93       	push	r29
	
	DDRA = 0xff;
  ea:	8f ef       	ldi	r24, 0xFF	; 255
  ec:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xff;
  ee:	87 bb       	out	0x17, r24	; 23

	DDRC = 0; // przyciski
  f0:	14 ba       	out	0x14, r1	; 20
	PORTC = 0xff;
  f2:	85 bb       	out	0x15, r24	; 21
	
	TCCR1B = (1<<CS12);
  f4:	84 e0       	ldi	r24, 0x04	; 4
  f6:	8e bd       	out	0x2e, r24	; 46
	TCCR0 =  (1<<CS01);
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	83 bf       	out	0x33, r24	; 51
	TIMSK =  (1<<TOIE1)|(1<<TOIE0); // przepelnienia licznik 1 i 2
  fc:	85 e0       	ldi	r24, 0x05	; 5
  fe:	89 bf       	out	0x39, r24	; 57

	sei(); //globalne wlacznie przerwan 1 i 2
 100:	78 94       	sei
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 102:	08 e8       	ldi	r16, 0x88	; 136
 104:	13 e1       	ldi	r17, 0x13	; 19

	while(1) {

		PORTA = seg[data[i]];
 106:	e0 91 72 00 	lds	r30, 0x0072
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	ed 58       	subi	r30, 0x8D	; 141
 10e:	ff 4f       	sbci	r31, 0xFF	; 255
 110:	e0 81       	ld	r30, Z
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	e0 5a       	subi	r30, 0xA0	; 160
 116:	ff 4f       	sbci	r31, 0xFF	; 255
 118:	80 81       	ld	r24, Z
 11a:	8b bb       	out	0x1b, r24	; 27
		PORTB = choice[i];
 11c:	e0 91 72 00 	lds	r30, 0x0072
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	e6 59       	subi	r30, 0x96	; 150
 124:	ff 4f       	sbci	r31, 0xFF	; 255
 126:	80 81       	ld	r24, Z
 128:	88 bb       	out	0x18, r24	; 24

		if (!(PINC & (1<<PC0)))
 12a:	98 99       	sbic	0x13, 0	; 19
 12c:	18 c0       	rjmp	.+48     	; 0x15e <main+0x7c>
 12e:	c0 e0       	ldi	r28, 0x00	; 0
 130:	d0 e0       	ldi	r29, 0x00	; 0
 // 
		{				
			for (int i = 0; i < 25; i++)
			{	
				data[0] = rand()%6+1;
 132:	0e 94 11 01 	call	0x222	; 0x222 <rand>
 136:	66 e0       	ldi	r22, 0x06	; 6
 138:	70 e0       	ldi	r23, 0x00	; 0
 13a:	0e 94 21 01 	call	0x242	; 0x242 <__divmodhi4>
 13e:	8f 5f       	subi	r24, 0xFF	; 255
 140:	80 93 73 00 	sts	0x0073, r24
				data[1] = rand()%6+1;	
 144:	0e 94 11 01 	call	0x222	; 0x222 <rand>
 148:	66 e0       	ldi	r22, 0x06	; 6
 14a:	70 e0       	ldi	r23, 0x00	; 0
 14c:	0e 94 21 01 	call	0x242	; 0x242 <__divmodhi4>
 150:	8f 5f       	subi	r24, 0xFF	; 255
 152:	80 93 74 00 	sts	0x0074, r24
		PORTB = choice[i];

		if (!(PINC & (1<<PC0)))
 // 
		{				
			for (int i = 0; i < 25; i++)
 156:	21 96       	adiw	r28, 0x01	; 1
 158:	c9 31       	cpi	r28, 0x19	; 25
 15a:	d1 05       	cpc	r29, r1
 15c:	51 f7       	brne	.-44     	; 0x132 <main+0x50>
			{	
				data[0] = rand()%6+1;
				data[1] = rand()%6+1;	
			}		
		}	
		if (!(PINC & (1<<PC1)))
 15e:	99 99       	sbic	0x13, 1	; 19
 160:	d2 cf       	rjmp	.-92     	; 0x106 <main+0x24>
		{
			data[0] = rand()%6+1;
 162:	0e 94 11 01 	call	0x222	; 0x222 <rand>
 166:	66 e0       	ldi	r22, 0x06	; 6
 168:	70 e0       	ldi	r23, 0x00	; 0
 16a:	0e 94 21 01 	call	0x242	; 0x242 <__divmodhi4>
 16e:	8f 5f       	subi	r24, 0xFF	; 255
 170:	80 93 73 00 	sts	0x0073, r24
 174:	c8 01       	movw	r24, r16
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <main+0x94>
			_delay_ms(20);
			data[1] = 0b00000000;
 17a:	10 92 74 00 	sts	0x0074, r1
 17e:	c3 cf       	rjmp	.-122    	; 0x106 <main+0x24>

00000180 <do_rand>:
 180:	a0 e0       	ldi	r26, 0x00	; 0
 182:	b0 e0       	ldi	r27, 0x00	; 0
 184:	e6 ec       	ldi	r30, 0xC6	; 198
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	0c 94 8a 01 	jmp	0x314	; 0x314 <__prologue_saves__+0x10>
 18c:	ec 01       	movw	r28, r24
 18e:	a8 80       	ld	r10, Y
 190:	b9 80       	ldd	r11, Y+1	; 0x01
 192:	ca 80       	ldd	r12, Y+2	; 0x02
 194:	db 80       	ldd	r13, Y+3	; 0x03
 196:	a1 14       	cp	r10, r1
 198:	b1 04       	cpc	r11, r1
 19a:	c1 04       	cpc	r12, r1
 19c:	d1 04       	cpc	r13, r1
 19e:	41 f4       	brne	.+16     	; 0x1b0 <do_rand+0x30>
 1a0:	84 e2       	ldi	r24, 0x24	; 36
 1a2:	a8 2e       	mov	r10, r24
 1a4:	89 ed       	ldi	r24, 0xD9	; 217
 1a6:	b8 2e       	mov	r11, r24
 1a8:	8b e5       	ldi	r24, 0x5B	; 91
 1aa:	c8 2e       	mov	r12, r24
 1ac:	87 e0       	ldi	r24, 0x07	; 7
 1ae:	d8 2e       	mov	r13, r24
 1b0:	c6 01       	movw	r24, r12
 1b2:	b5 01       	movw	r22, r10
 1b4:	2d e1       	ldi	r18, 0x1D	; 29
 1b6:	33 ef       	ldi	r19, 0xF3	; 243
 1b8:	41 e0       	ldi	r20, 0x01	; 1
 1ba:	50 e0       	ldi	r21, 0x00	; 0
 1bc:	0e 94 67 01 	call	0x2ce	; 0x2ce <__divmodsi4>
 1c0:	27 ea       	ldi	r18, 0xA7	; 167
 1c2:	31 e4       	ldi	r19, 0x41	; 65
 1c4:	40 e0       	ldi	r20, 0x00	; 0
 1c6:	50 e0       	ldi	r21, 0x00	; 0
 1c8:	0e 94 48 01 	call	0x290	; 0x290 <__mulsi3>
 1cc:	7b 01       	movw	r14, r22
 1ce:	8c 01       	movw	r16, r24
 1d0:	c6 01       	movw	r24, r12
 1d2:	b5 01       	movw	r22, r10
 1d4:	2d e1       	ldi	r18, 0x1D	; 29
 1d6:	33 ef       	ldi	r19, 0xF3	; 243
 1d8:	41 e0       	ldi	r20, 0x01	; 1
 1da:	50 e0       	ldi	r21, 0x00	; 0
 1dc:	0e 94 67 01 	call	0x2ce	; 0x2ce <__divmodsi4>
 1e0:	ca 01       	movw	r24, r20
 1e2:	b9 01       	movw	r22, r18
 1e4:	2c ee       	ldi	r18, 0xEC	; 236
 1e6:	34 ef       	ldi	r19, 0xF4	; 244
 1e8:	4f ef       	ldi	r20, 0xFF	; 255
 1ea:	5f ef       	ldi	r21, 0xFF	; 255
 1ec:	0e 94 48 01 	call	0x290	; 0x290 <__mulsi3>
 1f0:	6e 0d       	add	r22, r14
 1f2:	7f 1d       	adc	r23, r15
 1f4:	80 1f       	adc	r24, r16
 1f6:	91 1f       	adc	r25, r17
 1f8:	97 ff       	sbrs	r25, 7
 1fa:	04 c0       	rjmp	.+8      	; 0x204 <do_rand+0x84>
 1fc:	61 50       	subi	r22, 0x01	; 1
 1fe:	70 40       	sbci	r23, 0x00	; 0
 200:	80 40       	sbci	r24, 0x00	; 0
 202:	90 48       	sbci	r25, 0x80	; 128
 204:	68 83       	st	Y, r22
 206:	79 83       	std	Y+1, r23	; 0x01
 208:	8a 83       	std	Y+2, r24	; 0x02
 20a:	9b 83       	std	Y+3, r25	; 0x03
 20c:	9b 01       	movw	r18, r22
 20e:	3f 77       	andi	r19, 0x7F	; 127
 210:	c9 01       	movw	r24, r18
 212:	cd b7       	in	r28, 0x3d	; 61
 214:	de b7       	in	r29, 0x3e	; 62
 216:	ea e0       	ldi	r30, 0x0A	; 10
 218:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__epilogue_restores__+0x10>

0000021c <rand_r>:
 21c:	0e 94 c0 00 	call	0x180	; 0x180 <do_rand>
 220:	08 95       	ret

00000222 <rand>:
 222:	8e e6       	ldi	r24, 0x6E	; 110
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 c0 00 	call	0x180	; 0x180 <do_rand>
 22a:	08 95       	ret

0000022c <srand>:
 22c:	a0 e0       	ldi	r26, 0x00	; 0
 22e:	b0 e0       	ldi	r27, 0x00	; 0
 230:	80 93 6e 00 	sts	0x006E, r24
 234:	90 93 6f 00 	sts	0x006F, r25
 238:	a0 93 70 00 	sts	0x0070, r26
 23c:	b0 93 71 00 	sts	0x0071, r27
 240:	08 95       	ret

00000242 <__divmodhi4>:
 242:	97 fb       	bst	r25, 7
 244:	09 2e       	mov	r0, r25
 246:	07 26       	eor	r0, r23
 248:	0a d0       	rcall	.+20     	; 0x25e <__divmodhi4_neg1>
 24a:	77 fd       	sbrc	r23, 7
 24c:	04 d0       	rcall	.+8      	; 0x256 <__divmodhi4_neg2>
 24e:	0c d0       	rcall	.+24     	; 0x268 <__udivmodhi4>
 250:	06 d0       	rcall	.+12     	; 0x25e <__divmodhi4_neg1>
 252:	00 20       	and	r0, r0
 254:	1a f4       	brpl	.+6      	; 0x25c <__divmodhi4_exit>

00000256 <__divmodhi4_neg2>:
 256:	70 95       	com	r23
 258:	61 95       	neg	r22
 25a:	7f 4f       	sbci	r23, 0xFF	; 255

0000025c <__divmodhi4_exit>:
 25c:	08 95       	ret

0000025e <__divmodhi4_neg1>:
 25e:	f6 f7       	brtc	.-4      	; 0x25c <__divmodhi4_exit>
 260:	90 95       	com	r25
 262:	81 95       	neg	r24
 264:	9f 4f       	sbci	r25, 0xFF	; 255
 266:	08 95       	ret

00000268 <__udivmodhi4>:
 268:	aa 1b       	sub	r26, r26
 26a:	bb 1b       	sub	r27, r27
 26c:	51 e1       	ldi	r21, 0x11	; 17
 26e:	07 c0       	rjmp	.+14     	; 0x27e <__udivmodhi4_ep>

00000270 <__udivmodhi4_loop>:
 270:	aa 1f       	adc	r26, r26
 272:	bb 1f       	adc	r27, r27
 274:	a6 17       	cp	r26, r22
 276:	b7 07       	cpc	r27, r23
 278:	10 f0       	brcs	.+4      	; 0x27e <__udivmodhi4_ep>
 27a:	a6 1b       	sub	r26, r22
 27c:	b7 0b       	sbc	r27, r23

0000027e <__udivmodhi4_ep>:
 27e:	88 1f       	adc	r24, r24
 280:	99 1f       	adc	r25, r25
 282:	5a 95       	dec	r21
 284:	a9 f7       	brne	.-22     	; 0x270 <__udivmodhi4_loop>
 286:	80 95       	com	r24
 288:	90 95       	com	r25
 28a:	bc 01       	movw	r22, r24
 28c:	cd 01       	movw	r24, r26
 28e:	08 95       	ret

00000290 <__mulsi3>:
 290:	62 9f       	mul	r22, r18
 292:	d0 01       	movw	r26, r0
 294:	73 9f       	mul	r23, r19
 296:	f0 01       	movw	r30, r0
 298:	82 9f       	mul	r24, r18
 29a:	e0 0d       	add	r30, r0
 29c:	f1 1d       	adc	r31, r1
 29e:	64 9f       	mul	r22, r20
 2a0:	e0 0d       	add	r30, r0
 2a2:	f1 1d       	adc	r31, r1
 2a4:	92 9f       	mul	r25, r18
 2a6:	f0 0d       	add	r31, r0
 2a8:	83 9f       	mul	r24, r19
 2aa:	f0 0d       	add	r31, r0
 2ac:	74 9f       	mul	r23, r20
 2ae:	f0 0d       	add	r31, r0
 2b0:	65 9f       	mul	r22, r21
 2b2:	f0 0d       	add	r31, r0
 2b4:	99 27       	eor	r25, r25
 2b6:	72 9f       	mul	r23, r18
 2b8:	b0 0d       	add	r27, r0
 2ba:	e1 1d       	adc	r30, r1
 2bc:	f9 1f       	adc	r31, r25
 2be:	63 9f       	mul	r22, r19
 2c0:	b0 0d       	add	r27, r0
 2c2:	e1 1d       	adc	r30, r1
 2c4:	f9 1f       	adc	r31, r25
 2c6:	bd 01       	movw	r22, r26
 2c8:	cf 01       	movw	r24, r30
 2ca:	11 24       	eor	r1, r1
 2cc:	08 95       	ret

000002ce <__divmodsi4>:
 2ce:	97 fb       	bst	r25, 7
 2d0:	09 2e       	mov	r0, r25
 2d2:	05 26       	eor	r0, r21
 2d4:	0e d0       	rcall	.+28     	; 0x2f2 <__divmodsi4_neg1>
 2d6:	57 fd       	sbrc	r21, 7
 2d8:	04 d0       	rcall	.+8      	; 0x2e2 <__divmodsi4_neg2>
 2da:	4b d0       	rcall	.+150    	; 0x372 <__udivmodsi4>
 2dc:	0a d0       	rcall	.+20     	; 0x2f2 <__divmodsi4_neg1>
 2de:	00 1c       	adc	r0, r0
 2e0:	38 f4       	brcc	.+14     	; 0x2f0 <__divmodsi4_exit>

000002e2 <__divmodsi4_neg2>:
 2e2:	50 95       	com	r21
 2e4:	40 95       	com	r20
 2e6:	30 95       	com	r19
 2e8:	21 95       	neg	r18
 2ea:	3f 4f       	sbci	r19, 0xFF	; 255
 2ec:	4f 4f       	sbci	r20, 0xFF	; 255
 2ee:	5f 4f       	sbci	r21, 0xFF	; 255

000002f0 <__divmodsi4_exit>:
 2f0:	08 95       	ret

000002f2 <__divmodsi4_neg1>:
 2f2:	f6 f7       	brtc	.-4      	; 0x2f0 <__divmodsi4_exit>
 2f4:	90 95       	com	r25
 2f6:	80 95       	com	r24
 2f8:	70 95       	com	r23
 2fa:	61 95       	neg	r22
 2fc:	7f 4f       	sbci	r23, 0xFF	; 255
 2fe:	8f 4f       	sbci	r24, 0xFF	; 255
 300:	9f 4f       	sbci	r25, 0xFF	; 255
 302:	08 95       	ret

00000304 <__prologue_saves__>:
 304:	2f 92       	push	r2
 306:	3f 92       	push	r3
 308:	4f 92       	push	r4
 30a:	5f 92       	push	r5
 30c:	6f 92       	push	r6
 30e:	7f 92       	push	r7
 310:	8f 92       	push	r8
 312:	9f 92       	push	r9
 314:	af 92       	push	r10
 316:	bf 92       	push	r11
 318:	cf 92       	push	r12
 31a:	df 92       	push	r13
 31c:	ef 92       	push	r14
 31e:	ff 92       	push	r15
 320:	0f 93       	push	r16
 322:	1f 93       	push	r17
 324:	cf 93       	push	r28
 326:	df 93       	push	r29
 328:	cd b7       	in	r28, 0x3d	; 61
 32a:	de b7       	in	r29, 0x3e	; 62
 32c:	ca 1b       	sub	r28, r26
 32e:	db 0b       	sbc	r29, r27
 330:	0f b6       	in	r0, 0x3f	; 63
 332:	f8 94       	cli
 334:	de bf       	out	0x3e, r29	; 62
 336:	0f be       	out	0x3f, r0	; 63
 338:	cd bf       	out	0x3d, r28	; 61
 33a:	09 94       	ijmp

0000033c <__epilogue_restores__>:
 33c:	2a 88       	ldd	r2, Y+18	; 0x12
 33e:	39 88       	ldd	r3, Y+17	; 0x11
 340:	48 88       	ldd	r4, Y+16	; 0x10
 342:	5f 84       	ldd	r5, Y+15	; 0x0f
 344:	6e 84       	ldd	r6, Y+14	; 0x0e
 346:	7d 84       	ldd	r7, Y+13	; 0x0d
 348:	8c 84       	ldd	r8, Y+12	; 0x0c
 34a:	9b 84       	ldd	r9, Y+11	; 0x0b
 34c:	aa 84       	ldd	r10, Y+10	; 0x0a
 34e:	b9 84       	ldd	r11, Y+9	; 0x09
 350:	c8 84       	ldd	r12, Y+8	; 0x08
 352:	df 80       	ldd	r13, Y+7	; 0x07
 354:	ee 80       	ldd	r14, Y+6	; 0x06
 356:	fd 80       	ldd	r15, Y+5	; 0x05
 358:	0c 81       	ldd	r16, Y+4	; 0x04
 35a:	1b 81       	ldd	r17, Y+3	; 0x03
 35c:	aa 81       	ldd	r26, Y+2	; 0x02
 35e:	b9 81       	ldd	r27, Y+1	; 0x01
 360:	ce 0f       	add	r28, r30
 362:	d1 1d       	adc	r29, r1
 364:	0f b6       	in	r0, 0x3f	; 63
 366:	f8 94       	cli
 368:	de bf       	out	0x3e, r29	; 62
 36a:	0f be       	out	0x3f, r0	; 63
 36c:	cd bf       	out	0x3d, r28	; 61
 36e:	ed 01       	movw	r28, r26
 370:	08 95       	ret

00000372 <__udivmodsi4>:
 372:	a1 e2       	ldi	r26, 0x21	; 33
 374:	1a 2e       	mov	r1, r26
 376:	aa 1b       	sub	r26, r26
 378:	bb 1b       	sub	r27, r27
 37a:	fd 01       	movw	r30, r26
 37c:	0d c0       	rjmp	.+26     	; 0x398 <__udivmodsi4_ep>

0000037e <__udivmodsi4_loop>:
 37e:	aa 1f       	adc	r26, r26
 380:	bb 1f       	adc	r27, r27
 382:	ee 1f       	adc	r30, r30
 384:	ff 1f       	adc	r31, r31
 386:	a2 17       	cp	r26, r18
 388:	b3 07       	cpc	r27, r19
 38a:	e4 07       	cpc	r30, r20
 38c:	f5 07       	cpc	r31, r21
 38e:	20 f0       	brcs	.+8      	; 0x398 <__udivmodsi4_ep>
 390:	a2 1b       	sub	r26, r18
 392:	b3 0b       	sbc	r27, r19
 394:	e4 0b       	sbc	r30, r20
 396:	f5 0b       	sbc	r31, r21

00000398 <__udivmodsi4_ep>:
 398:	66 1f       	adc	r22, r22
 39a:	77 1f       	adc	r23, r23
 39c:	88 1f       	adc	r24, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	1a 94       	dec	r1
 3a2:	69 f7       	brne	.-38     	; 0x37e <__udivmodsi4_loop>
 3a4:	60 95       	com	r22
 3a6:	70 95       	com	r23
 3a8:	80 95       	com	r24
 3aa:	90 95       	com	r25
 3ac:	9b 01       	movw	r18, r22
 3ae:	ac 01       	movw	r20, r24
 3b0:	bd 01       	movw	r22, r26
 3b2:	cf 01       	movw	r24, r30
 3b4:	08 95       	ret

000003b6 <_exit>:
 3b6:	f8 94       	cli

000003b8 <__stop_program>:
 3b8:	ff cf       	rjmp	.-2      	; 0x3b8 <__stop_program>
